# Copyright (c) 2023 Tim <tbckr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

# https://taskfile.dev

version: '3'

env:
  GO111MODULE: on
  GOPROXY: https://proxy.golang.org,direct
  GOSUMDB: sum.golang.org

vars:
  DOCKER: '{{default "docker" .DOCKER}}'

tasks:
  license-header:
    desc: Add license header to all files
    aliases:
      - "license"
    cmds:
      - |
        addlicense -c "Tim <tbckr>" -l MIT -s -v \
        -ignore "dist/**" \
        -ignore ".idea/**" \
        -ignore ".task/**" \
        -ignore ".github/licenses.tmpl" \
        -ignore "licenses/*" \
        -ignore "venv/*" \
        .

  prepare:
    desc: Install dependencies
    cmds:
      - go mod tidy

  clean:
    desc: Clean up
    cmds:
      - rm -f coverage.txt
      - rm -f flyinhigh.fly.dev

  build:
    desc: Build the binary
    sources:
      - ./**/*.go
    generates:
      - ./flyinhigh.fly.dev
    cmds:
      - go build -o flyinhigh.fly.dev main.go

  test:
    desc: Run tests
    env:
      LC_ALL: C
    vars:
      TEST_OPTIONS: '{{default "" .TEST_OPTIONS}}'
      SOURCE_FILES: '{{default "./..." .SOURCE_FILES}}'
      TEST_PATTERN: '{{default "." .TEST_PATTERN}}'
    cmds:
      - go test {{.TEST_OPTIONS}} -failfast -race -coverpkg=./... -covermode=atomic -coverprofile=coverage.txt {{.SOURCE_FILES}} -run {{.TEST_PATTERN}} -timeout=5m

  cover:
    desc: Open the cover tool
    cmds:
      - go tool cover -html=coverage.txt

  fmt:
    desc: gofumpt all code
    cmds:
      - gofumpt -w -l .

  lint:
    desc: Lint the code
    cmds:
      - task: lint:go
      - task: lint:md

  lint:go:
    desc: Lint the code with golangci-lint
    cmds:
      - golangci-lint run ./...

  lint:md:
    desc: Lint markdown files
    cmds:
      - docker run --rm --pull always -v $(pwd):/app:ro ghcr.io/tbckr/markdownlint:18 . --config=.mdl_config.yaml

  ci:
    desc: Run all CI steps
    cmds:
      - task: clean
      - task: prepare
      - task: build
      - task: test

  default:
    desc: Runs the default tasks
    cmds:
      - task: ci

  docker:build:base:
    desc: Build a docker image
    internal: true
    cmds:
      - "{{.DOCKER}} build --pull --platform {{.OS}}/{{.Platform}} --build-arg TARGETOS={{.OS}} --build-arg TARGETARCH={{.Platform}}{{with .Variant}} --build-arg TARGETVARIANT={{.}}{{end}} -t fly-machine:latest ."

  docker:build:linux-amd64:
    desc: Build the linux/amd64 docker image
    cmds:
      - task: docker:build:base
        vars:
          OS: 'linux'
          Platform: 'amd64'

  docker:build:
    desc: Build docker image
    cmds:
      - task: docker:build:linux-amd64

  renovate:debug:
    desc: Run the current renovate configuration in debug mode
    vars:
      Repo:
        sh: git remote get-url origin | cut -d':' -f2 | sed 's/\.git//'
    cmds:
      - docker run --rm -v $(pwd):/usr/src/app:ro -e LOG_LEVEL=debug -e RENOVATE_CONFIG_FILE=renovate.json -e RENOVATE_TOKEN=${GITHUB_TOKEN} renovate/renovate:35 --dry-run {{.Repo}}
